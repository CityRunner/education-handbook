# Карта сокровищ

# На пиратской карте отмечено N точек, в которых зарыты сокровища. Каждая
# точка задана координатами (Xi, Yi). Координаты указаны в километрах.
# Команда Капитана Крюка хочет составить маршрут, чтобы собрать как можно
# больше кладов. Однако есть ограничение: для любых двух соседних точек
# маршрута (Xi, Yi) и (Xj, Yj) координаты Xi и Xj могут различаться
# только последней цифрой, как и координаты Yi и Yj тоже могут различаться
# только последней цифрой. Например, после точки (15, 10) они могут
# отправиться в точку (18, 16), а вот из точки (14, 68) в точку
# (19, 71) пройти уже не получится, ведь 68 и 71 различаются не только
# последней цифрой. Из точки (5, 12) в точку (13, 14) попасть тоже нельзя, так
# как числа 5 и 13 отличаются в разряде десятков. По заданным координатам
# определите, какое максимальное количество точек сможет добавить в свой
# маршрут Капитан Крюк.

# Формат ввода
# В первой строке указано число N (1≤N≤1051≤N≤105) — количество точек,
# отмеченных на карте сокровищ. В следующих N строках содержатся пары
# координат: Xi и Yj — координаты ii-ой точки. Координаты — целые числа
# не меньше нуля и не больше 109109. Гарантируется, что совпадающих точек в
# списке нет.

# Формат вывода
# Выведите одно число — максимальное количество точек, которое Капитан Крюк
# сможет посетить по маршруту, построенному по описанным правилам.


spots = {}
for _ in range(int(input())):
    x, y = input().split()
    index = (int(x) // 10, int(y) // 10)
    spots[index] = spots.get(index, 0) + 1
print(max(spots.values()))
