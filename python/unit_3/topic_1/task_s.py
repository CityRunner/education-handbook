# Польский калькулятор

# Напишите программу, которая производит вычисление выражения, записанного в
# обратной польской нотации (ОПН).

# В ОПН нет ни скобок, ни приоритета операторов («умножение раньше сложения»).

# Чтобы прочитать выражение, записанное в таком формате, нужно просматривать
# выражение строго последовательно. Вводимые значения последовательно
# добавляются в стек. Когда встречается символ операции, то из стека
# извлекаются последние положенные туда значения, с ними проделывается эта
# операция и результат возвращается в стек.

# Если для операции важен порядок значений, с которыми она производится, то
# первым идёт число, лежавшее в стеке глубже. В частности, если операция —
# вычитание, то из предпоследнего числа в стеке вычитается последнее, а не
# наоборот.

# Изначально стек пустой, в результате полного вычисления выражения в нём
# должно остаться одно значение — результат вычислений.

# Формат ввода
# Вводится одна строка, содержащая разделённые пробелами целые числа и знаки
# операций +, -, *, которые вместе составляют корректное выражение в обратной
# польской нотации.

# Формат вывода
# Выводится одно целое число — результат вычисления выражения.


stack = []
math = ('+', '-', '*')
RPN = input().split()

for char in RPN:
    if char not in math:
        stack.append(char)
    else:
        b, a = int(stack.pop()), int(stack.pop())
        match char:
            case '+':
                result = a + b
            case '-':
                result = a - b
            case '*':
                result = a * b
        stack.append(result)

print(stack.pop())

