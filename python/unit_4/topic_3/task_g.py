# Однотипность не порок

# Во многих задачах требуется контроль входных данных, в частности,
# несмотря на динамическую типизацию, их типов.

# Разработайте декоратор same_type, который производит проверку
# переменного количества позиционных параметров. В случае получения не
# одинаковых типов выводит сообщение "Обнаружены различные типы данных"
# и прерывает выполнение функции.

# Примечание
# Ваше решение должно содержать только функции.
# В решении не должно быть вызовов требуемых функций.


def same_type(func):

    def decorated(*args):
        first_type = type(args[0])
        if all(type(arg) is first_type for arg in args[1:]):
            return func(*args)
        else:
            print('Обнаружены различные типы данных')
    return decorated


# @same_type
# def a_plus_b(a, b):
#     return a + b
#
#
# print(a_plus_b(3, 5.2) or 'Fail')
# print(a_plus_b(7, '9') or 'Fail')
# print(a_plus_b(-3, 5) or 'Fail')
