# Кофейня

# Руководство местной кофейни для программистов под названием
# Java-0x00 решило модернизировать систему заказа кофе.

# Для этого им требуется реализовать функцию order, которая принимает
# список предпочтений посетителя в порядке «убывания желания».

# Согласно положению, каждый напиток в кофейне строго определён рецептом:
#     Эспрессо готовится из:
#         1 порции кофейных зерен.
#     Капучино готовится из:
#         1 порции кофейных зерен и 3 порций молока.
#     Макиато готовится из:
#         2 порций кофейных зерен и 1 порции молока.
#     Кофе по-венски готовится из:
#         1 порции кофейных зерен и 2 порций взбитых сливок.
#     Латте Макиато готовится из:
#         1 порции кофейных зерен, 2 порций молока и 1 порции взбитых сливок.
#     Кон Панна готовится из:
#         1 порции кофейных зерен и 1 порции взбитых сливок.

# В глобальной переменной in_stock содержится словарь, описывающий
# ингредиенты в наличии. Ключи словаря: coffee, cream, milk.

# Функция должна вернуть:
#     название напитка, который будет приготовлен;
#     сообщение «К сожалению, не можем предложить Вам напиток», если ни
#     одно из предпочтений не может быть приготовлено.

# Если заказ может быть совершён, количество доступных ингредиентов
# должно соответствующим образом уменьшиться.

# Примечание
# В решении не должно быть вызовов требуемых функций.


def order(*args):
    global in_stock
    not_enough = 'К сожалению, не можем предложить Вам напиток'
    recipes = {'Эспрессо': {'coffee': 1},
               'Капучино': {'coffee': 1, 'milk': 3},
               'Макиато': {'coffee': 2, 'milk': 1},
               'Кофе по-венски': {'coffee': 1, 'cream': 2},
               'Латте Макиато': {'coffee': 1, 'milk': 2, 'cream': 1},
               'Кон Панна': {'coffee': 1, 'cream': 1}}
    for coffee in args:
        enough = True
        for recipe_name, recipe in recipes.items():
            if coffee == recipe_name:
                for item in recipe:
                    if recipe[item] > in_stock[item]:
                        enough = False
        if enough:
            for name, value in recipes[coffee].items():
                in_stock[name] -= value
            return coffee
    return not_enough


# in_stock = {"coffee": 1, "milk": 2, "cream": 3}
# print(order("Эспрессо", "Капучино", "Макиато", "Кофе по-венски", "Латте Макиато", "Кон Панна"))
# print(order("Эспрессо", "Капучино", "Макиато", "Кофе по-венски", "Латте Макиато", "Кон Панна"))



